// Reverse array

// #include<iostream>
// using namespace std;
// void reverse(int arr[],int size){
//     int start=0,end=size-1;
//     while(start<end){
//         int temp=arr[start];
//         arr[start]=arr[end];
//         arr[end]=temp;
//         start++;
//         end--;
//     }
// }
// int main(){
//     int n;
//     cout<<"Enter the size of the array:";
//     cin>>n;
//     int arr[n];
//     cout<<"Enter the element of the array:";
//     for(int i=0;i<n;i++){
//         cin>>arr[i];
//     }
    
//     reverse(arr,n);
//     cout<<"Reversed array is:";
//     for(int i=0;i<n;i++){
//         cout<<arr[i]<<" ";
//     }
//     return 0;
// }

// Minimum And Maximum Element

#include<iostream>
using namespace std;

int maximum(int arr[],int size){
    int max=arr[0];
    for (int i = 0; i < size; i++)
    {
        if(max<arr[i])
            max=arr[i];
    } 
    return max;
}

int minimum(int arr[],int size){
    int min=arr[0];
    for (int i = 0; i < size; i++)
    {
        if(min>arr[i])
            min=arr[i];
    } 
    return min;
}

int main(){
    int n;
    cout<<"Enter the size of the array:";
    cin>>n;
    int arr[n];
    cout<<"enter the elements of the array:";
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
    }
    cout<<"Maximum value is:"<<maximum(arr,n)<<endl;
    cout<<"Minimum value is:"<<minimum(arr,n)<<endl;
    return 0;
}

// Kth smallest number in an array

//{ Driver Code Starts
//Initial function template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    int kthSmallest(int arr[], int l, int r, int k) {
        //code here
        sort(arr,arr+r+1);
        return arr[k-1];
    }
};

//{ Driver Code Starts.

int main()
{
    int test_case;
    cin>>test_case;
    while(test_case--)
    {
        int number_of_elements;
        cin>>number_of_elements;
        int a[number_of_elements];
        
        for(int i=0;i<number_of_elements;i++)
            cin>>a[i];
            
        int k;
        cin>>k;
        Solution ob;
        cout<<ob.kthSmallest(a, 0, number_of_elements-1, k)<<endl;
    }
    return 0;
}
// } Driver Code Ends

//{ Driver Code Starts
//Initial function template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    int kthSmallest(int arr[], int l, int r, int k) {
        //code here
        sort(arr,arr+r+1);
        return arr[r+1-k];
    }
};

//{ Driver Code Starts.
 
int main()
{
    int test_case;
    cin>>test_case;
    while(test_case--)
    {
        int number_of_elements;
        cin>>number_of_elements;
        int a[number_of_elements];
        
        for(int i=0;i<number_of_elements;i++)
            cin>>a[i];
            
        int k;
        cin>>k;
        Solution ob;
        cout<<ob.kthSmallest(a, 0, number_of_elements-1, k)<<endl;
    }
    return 0;
}
// } Driver Code Ends

// Sort 0s,1s and 2s

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
    public:
    void swap(int &x,int &y){
        int temp=x;
        x=y;
        y=temp;
    }
    void sort012(int arr[], int n)
    {
    int a0=0,b1=0,c2=n-1;
    while(b1<=c2){
        if(arr[b1]==0){
            swap(arr[b1],arr[a0]);
            a0++;
            b1++;
        }
        else if(arr[b1]==1){
            b1++;
        }
        else{
            swap(arr[b1],arr[c2]);
            c2--;
        }
    }
    
}
};

//{ Driver Code Starts.
int main() {

    int t;
    cin >> t;

    while(t--){
        int n;
        cin >>n;
        int a[n];
        for(int i=0;i<n;i++){
            cin >> a[i];
        }

        Solution ob;
        ob.sort012(a, n);

        for(int i=0;i<n;i++){
            cout << a[i]  << " ";
        }

        cout << endl;
        
        
    }
    return 0;
}


// } Driver Code Ends
